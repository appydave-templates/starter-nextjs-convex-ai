{
  "schema_manifest": {
    "version": "1.0.0",
    "generated_at": "2025-01-08T00:00:00Z",
    "source_file": "apps/convex/schema.ts",
    "generation_method": "manual_extraction",
    "ai_context": {
      "purpose": "Multi-layer AI-first application template database schema",
      "architecture": "Next.js frontend + Convex backend + Cloudflare Workers + AI integration",
      "key_patterns": [
        "BetterAuth integration for authentication",
        "Hybrid vector storage (Convex + Cloudflare Vectorize)",
        "Multi-system logging infrastructure",
        "Real-time chat with AI usage tracking",
        "Knowledge ingestion pipeline with vector embeddings"
      ],
      "design_philosophy": "AI-first development with comprehensive observability and cost management"
    },
    "table_categories": {
      "authentication": {
        "tables": ["users", "sessions", "accounts", "password_reset_tokens"],
        "purpose": "BetterAuth-integrated user management and session handling",
        "key_features": [
          "OAuth support",
          "session persistence",
          "secure password reset"
        ]
      },
      "logging": {
        "tables": ["debug_logs"],
        "purpose": "Multi-tier debugging and observability infrastructure",
        "key_features": [
          "Cross-system correlation",
          "Redis sync",
          "Cost-aware retention"
        ]
      },
      "chat": {
        "tables": ["chat_sessions", "chat_messages"],
        "purpose": "Persistent AI conversation management",
        "key_features": [
          "Multi-turn context",
          "Token tracking",
          "LLM usage analytics"
        ]
      },
      "knowledge": {
        "tables": ["source_documents", "document_chunks"],
        "purpose": "Document ingestion and vector search capabilities",
        "key_features": [
          "Change detection",
          "Vector embeddings",
          "Hybrid storage"
        ]
      },
      "development": {
        "tables": ["test_messages"],
        "purpose": "Development and testing infrastructure",
        "key_features": ["Connection validation", "Development workflows"]
      }
    },
    "tables": [
      {
        "name": "users",
        "category": "authentication",
        "purpose": "Core user authentication and profile management",
        "ai_context": {
          "business_meaning": "Central user entity for all application features",
          "common_operations": [
            "authentication",
            "profile_management",
            "authorization"
          ],
          "security_model": "PII data with role-based access control",
          "integration_points": [
            "BetterAuth adapter",
            "Chat system",
            "LLM access gating"
          ]
        },
        "relationships": {
          "outgoing": [
            {
              "table": "sessions",
              "type": "one_to_many",
              "field": "userId",
              "purpose": "Session management"
            },
            {
              "table": "accounts",
              "type": "one_to_many",
              "field": "userId",
              "purpose": "OAuth integration"
            },
            {
              "table": "password_reset_tokens",
              "type": "one_to_many",
              "field": "userId",
              "purpose": "Password reset flow"
            },
            {
              "table": "chat_sessions",
              "type": "one_to_many",
              "field": "userId",
              "purpose": "User conversations"
            },
            {
              "table": "chat_messages",
              "type": "one_to_many",
              "field": "userId",
              "purpose": "Message authorship (denormalized)"
            }
          ]
        },
        "key_fields": [
          {
            "name": "email",
            "purpose": "Primary authentication identifier",
            "constraints": ["unique", "required", "email_format"],
            "security": "PII - requires encryption",
            "performance": "Indexed for fast auth lookups"
          },
          {
            "name": "hasLLMAccess",
            "purpose": "Feature flag for AI/LLM access control",
            "business_logic": "Cost management and gradual feature rollout",
            "default": "false for new users"
          }
        ],
        "access_patterns": [
          {
            "pattern": "authentication_lookup",
            "index": "by_email",
            "frequency": "high",
            "description": "Email-based login verification"
          },
          {
            "pattern": "profile_operations",
            "index": "primary_key",
            "frequency": "medium",
            "description": "User profile CRUD operations"
          }
        ]
      },
      {
        "name": "debug_logs",
        "category": "logging",
        "purpose": "Centralized multi-tier application debugging and observability",
        "ai_context": {
          "business_meaning": "Cross-system log correlation for debugging complex workflows",
          "architecture_pattern": "Redis buffer → Convex sync → Dashboard presentation",
          "volume_characteristics": "High volume, cost-sensitive, requires cleanup strategies",
          "correlation_strategy": "trace_id for request tracking across systems"
        },
        "relationships": {
          "outgoing": [],
          "notes": "Standalone table - no foreign key relationships to maintain flexibility"
        },
        "key_fields": [
          {
            "name": "trace_id",
            "purpose": "Cross-system request correlation",
            "pattern": "UUID or session-specific identifier",
            "critical_for": "End-to-end debugging workflows"
          },
          {
            "name": "system",
            "purpose": "Source system identification",
            "values": ["browser", "convex", "worker", "manual"],
            "usage": "Component-level log categorization and filtering"
          },
          {
            "name": "raw_data",
            "purpose": "Complete original log entry preservation",
            "format": "Full JSON object from worker",
            "usage": "Audit trail and log processing pipeline debugging"
          }
        ],
        "access_patterns": [
          {
            "pattern": "trace_correlation",
            "index": "by_trace_id",
            "frequency": "high",
            "description": "Request tracking across system boundaries"
          },
          {
            "pattern": "system_debugging",
            "index": "by_system",
            "frequency": "medium",
            "description": "Component-specific issue investigation"
          },
          {
            "pattern": "temporal_analysis",
            "index": "by_timestamp",
            "frequency": "medium",
            "description": "Time-based debugging and incident investigation"
          }
        ]
      },
      {
        "name": "chat_sessions",
        "category": "chat",
        "purpose": "AI conversation session management and organization",
        "ai_context": {
          "business_meaning": "Persistent conversation contexts for multi-turn AI interactions",
          "ui_integration": "Conversation sidebar and session management",
          "context_management": "Multi-turn conversation state preservation"
        },
        "relationships": {
          "incoming": [
            {
              "table": "users",
              "type": "many_to_one",
              "field": "userId",
              "purpose": "Session ownership"
            }
          ],
          "outgoing": [
            {
              "table": "chat_messages",
              "type": "one_to_many",
              "field": "sessionId",
              "purpose": "Message organization"
            }
          ]
        },
        "key_fields": [
          {
            "name": "title",
            "purpose": "Human-readable conversation identifier",
            "generation": "Auto-generated from first message or user-provided",
            "ui_purpose": "Sidebar navigation and conversation management"
          },
          {
            "name": "updated_at",
            "purpose": "Last activity tracking for session prioritization",
            "usage": "Recent conversation sorting and cleanup decisions"
          }
        ]
      },
      {
        "name": "chat_messages",
        "category": "chat",
        "purpose": "Individual conversation messages with AI usage tracking",
        "ai_context": {
          "business_meaning": "LLM request/response pairs with comprehensive usage analytics",
          "cost_management": "Token usage tracking for billing and usage limits",
          "performance_considerations": "Denormalized userId for efficient user-scoped queries"
        },
        "relationships": {
          "incoming": [
            {
              "table": "chat_sessions",
              "type": "many_to_one",
              "field": "sessionId",
              "purpose": "Conversation grouping"
            },
            {
              "table": "users",
              "type": "many_to_one",
              "field": "userId",
              "purpose": "Message authorship",
              "note": "Denormalized for performance"
            }
          ]
        },
        "key_fields": [
          {
            "name": "role",
            "purpose": "Message author identification in conversation flow",
            "values": ["user", "assistant"],
            "ui_rendering": "Different styling and positioning for user vs AI messages"
          },
          {
            "name": "model_used",
            "purpose": "AI model tracking for assistant messages",
            "examples": ["gpt-4", "claude-3", "llama-2"],
            "analytics": "Model performance comparison and cost analysis"
          },
          {
            "name": "has_llm_access",
            "purpose": "Flag indicating actual LLM usage vs fallback responses",
            "cost_analysis": "Distinguish between LLM costs and cached/fallback responses",
            "feature_analytics": "Track LLM feature usage patterns"
          }
        ]
      },
      {
        "name": "source_documents",
        "category": "knowledge",
        "purpose": "Document metadata and processing pipeline management",
        "ai_context": {
          "business_meaning": "Source document tracking for knowledge ingestion pipeline",
          "processing_strategy": "Hash-based change detection for incremental processing",
          "pipeline_monitoring": "Status tracking for processing health and error handling"
        },
        "relationships": {
          "outgoing": [
            {
              "table": "document_chunks",
              "type": "one_to_many",
              "field": "source_document",
              "join_on": "file_path",
              "purpose": "Document chunking relationship"
            }
          ]
        },
        "key_fields": [
          {
            "name": "file_path",
            "purpose": "Unique document identifier relative to project root",
            "format": "Relative file path string",
            "examples": [
              "docs/api/authentication.md",
              "src/components/README.md"
            ],
            "uniqueness": "Primary document identifier across system"
          },
          {
            "name": "content_hash",
            "purpose": "SHA-256 hash for change detection and incremental processing",
            "optimization": "Only reprocess documents when content actually changes",
            "deduplication": "Prevents unnecessary vector embedding regeneration"
          },
          {
            "name": "processing_status",
            "purpose": "Pipeline status tracking",
            "values": ["pending", "processing", "completed", "failed"],
            "monitoring": "Pipeline health and error rate analysis"
          }
        ]
      },
      {
        "name": "document_chunks",
        "category": "knowledge",
        "purpose": "Text chunks with vector embeddings for semantic search",
        "ai_context": {
          "business_meaning": "Searchable text fragments with vector embeddings for AI-powered retrieval",
          "architecture_pattern": "Hybrid storage: metadata in Convex, vectors in Cloudflare Vectorize",
          "search_integration": "Semantic similarity search for AI context augmentation"
        },
        "relationships": {
          "incoming": [
            {
              "table": "source_documents",
              "type": "many_to_one",
              "field": "source_document",
              "join_on": "file_path",
              "purpose": "Document relationship"
            }
          ]
        },
        "key_fields": [
          {
            "name": "vectorize_id",
            "purpose": "Unique identifier in Cloudflare Vectorize",
            "format": "Short hash + chunk index (max 64 bytes)",
            "example": "a1b2c3d4e5f6g7h8_c0",
            "constraint": "Vectorize 64-byte ID limit compliance"
          },
          {
            "name": "content",
            "purpose": "Full text content for retrieval and context assembly",
            "usage": "Combined with vector search results for AI context injection"
          },
          {
            "name": "metadata",
            "purpose": "Rich chunk context including file info and processing details",
            "structure": {
              "file_path": "Source file reference",
              "file_type": "Processing context",
              "modified_at": "Source file timestamp",
              "chunk_size": "Analytics and optimization"
            }
          }
        ]
      }
    ],
    "system_integrations": {
      "vector_search": {
        "provider": "Cloudflare Vectorize",
        "embedding_model": "OpenAI text-embedding-3-small",
        "dimensions": 1536,
        "usage_pattern": "Hybrid metadata + vector search for AI context assembly"
      },
      "authentication": {
        "provider": "BetterAuth",
        "adapter": "Convex adapter",
        "features": [
          "Email/password",
          "OAuth providers",
          "Session management",
          "Password reset"
        ]
      },
      "logging": {
        "architecture": "Cloudflare Worker → Redis Buffer → Convex Sync → Dashboard",
        "volume_management": "Cost-aware retention and cleanup strategies"
      }
    },
    "ai_development_patterns": {
      "context_injection": {
        "chat_context": "Multi-turn conversation history from chat_sessions and chat_messages",
        "knowledge_context": "Semantic search results from document_chunks with source metadata",
        "user_context": "Authentication state and LLM access permissions from users table",
        "debugging_context": "Trace correlation across systems via debug_logs"
      },
      "cost_management": {
        "llm_gating": "hasLLMAccess flag on users for feature control",
        "token_tracking": "tokens_used field for billing and analytics",
        "volume_controls": "Log cleanup strategies and vector deduplication",
        "hybrid_storage": "Convex metadata + Vectorize vectors for cost optimization"
      },
      "observability": {
        "correlation_ids": "End-to-end request tracing across all systems",
        "processing_status": "Pipeline health monitoring and error tracking",
        "usage_analytics": "LLM usage patterns and feature adoption metrics"
      }
    },
    "query_patterns": {
      "high_frequency": [
        {
          "table": "users",
          "pattern": "Authentication lookup by email",
          "index": "by_email",
          "optimization": "Critical for login performance"
        },
        {
          "table": "sessions",
          "pattern": "Session validation by token",
          "index": "by_session_token",
          "optimization": "Required for auth middleware"
        },
        {
          "table": "debug_logs",
          "pattern": "Trace correlation for debugging",
          "index": "by_trace_id",
          "optimization": "Essential for multi-system debugging"
        }
      ],
      "medium_frequency": [
        {
          "table": "chat_messages",
          "pattern": "Conversation history by session",
          "index": "by_session_id",
          "optimization": "Chat interface rendering"
        },
        {
          "table": "document_chunks",
          "pattern": "Content retrieval by vector ID",
          "index": "by_vectorize_id",
          "optimization": "Search result assembly"
        }
      ]
    }
  }
}
